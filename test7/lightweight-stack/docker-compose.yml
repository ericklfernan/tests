version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    depends_on:
      - zookeeper
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_PORT=7077
    ports:
      - "8080:8080"
      - "7077:7077"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
    networks:
      - spark-network

  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1G
    networks:
      - spark-network

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
    networks:
      - minio-network

  kafka-producer:
    build: ./kafka_producer
    depends_on:
      - kafka
    deploy:
      replicas: 1
    networks:
      - kafka-network

  spark-consumer:
    build: ./spark_consumer
    depends_on:
      - kafka
      - spark-master
      - spark-worker
      - minio
    deploy:
      replicas: 1
    networks:
      - kafka-network
      - spark-network
      - minio-network

volumes:
  minio_data:

networks:
  kafka-network:
    driver: bridge
  spark-network:
    driver: bridge
  minio-network:
    driver: bridge
